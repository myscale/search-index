// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scann/proto/distance_measure.proto

#include "scann/proto/distance_measure.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace research_scann {
constexpr DistanceMeasureConfig::DistanceMeasureConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : distance_measure_(nullptr)
  , distance_measure_params_(nullptr){}
struct DistanceMeasureConfigDefaultTypeInternal {
  constexpr DistanceMeasureConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DistanceMeasureConfigDefaultTypeInternal() {}
  union {
    DistanceMeasureConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DistanceMeasureConfigDefaultTypeInternal _DistanceMeasureConfig_default_instance_;
constexpr DistanceMeasureParamsConfig::DistanceMeasureParamsConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DistanceMeasureParamsConfigDefaultTypeInternal {
  constexpr DistanceMeasureParamsConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DistanceMeasureParamsConfigDefaultTypeInternal() {}
  union {
    DistanceMeasureParamsConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DistanceMeasureParamsConfigDefaultTypeInternal _DistanceMeasureParamsConfig_default_instance_;
}  // namespace research_scann
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scann_2fproto_2fdistance_5fmeasure_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scann_2fproto_2fdistance_5fmeasure_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, distance_measure_),
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, distance_measure_params_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureParamsConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureParamsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureParamsConfig, filename_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::research_scann::DistanceMeasureConfig)},
  { 9, 15, sizeof(::research_scann::DistanceMeasureParamsConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::research_scann::_DistanceMeasureConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::research_scann::_DistanceMeasureParamsConfig_default_instance_),
};

const char descriptor_table_protodef_scann_2fproto_2fdistance_5fmeasure_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"scann/proto/distance_measure.proto\022\016re"
  "search_scann\"\222\001\n\025DistanceMeasureConfig\022+"
  "\n\020distance_measure\030\001 \001(\t:\021SquaredL2Dista"
  "nce\022L\n\027distance_measure_params\030\002 \001(\0132+.r"
  "esearch_scann.DistanceMeasureParamsConfi"
  "g\"/\n\033DistanceMeasureParamsConfig\022\020\n\010file"
  "name\030\001 \001(\t"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto = {
  false, false, 250, descriptor_table_protodef_scann_2fproto_2fdistance_5fmeasure_2eproto, "scann/proto/distance_measure.proto", 
  &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_scann_2fproto_2fdistance_5fmeasure_2eproto::offsets,
  file_level_metadata_scann_2fproto_2fdistance_5fmeasure_2eproto, file_level_enum_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto, file_level_service_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_getter() {
  return &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_scann_2fproto_2fdistance_5fmeasure_2eproto(&descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto);
namespace research_scann {

// ===================================================================

class DistanceMeasureConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DistanceMeasureConfig>()._has_bits_);
  static void set_has_distance_measure(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::research_scann::DistanceMeasureParamsConfig& distance_measure_params(const DistanceMeasureConfig* msg);
  static void set_has_distance_measure_params(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::research_scann::DistanceMeasureParamsConfig&
DistanceMeasureConfig::_Internal::distance_measure_params(const DistanceMeasureConfig* msg) {
  return *msg->distance_measure_params_;
}
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_{{{"SquaredL2Distance", 17}}, {nullptr}};
DistanceMeasureConfig::DistanceMeasureConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:research_scann.DistanceMeasureConfig)
}
DistanceMeasureConfig::DistanceMeasureConfig(const DistanceMeasureConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  distance_measure_.UnsafeSetDefault(nullptr);
  if (from._internal_has_distance_measure()) {
    distance_measure_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, from._internal_distance_measure(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_distance_measure_params()) {
    distance_measure_params_ = new ::research_scann::DistanceMeasureParamsConfig(*from.distance_measure_params_);
  } else {
    distance_measure_params_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:research_scann.DistanceMeasureConfig)
}

inline void DistanceMeasureConfig::SharedCtor() {
distance_measure_.UnsafeSetDefault(nullptr);
distance_measure_params_ = nullptr;
}

DistanceMeasureConfig::~DistanceMeasureConfig() {
  // @@protoc_insertion_point(destructor:research_scann.DistanceMeasureConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DistanceMeasureConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  distance_measure_.DestroyNoArena(nullptr);
  if (this != internal_default_instance()) delete distance_measure_params_;
}

void DistanceMeasureConfig::ArenaDtor(void* object) {
  DistanceMeasureConfig* _this = reinterpret_cast< DistanceMeasureConfig* >(object);
  (void)_this;
}
void DistanceMeasureConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DistanceMeasureConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DistanceMeasureConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:research_scann.DistanceMeasureConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      distance_measure_.ClearToDefault(::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(distance_measure_params_ != nullptr);
      distance_measure_params_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DistanceMeasureConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string distance_measure = 1 [default = "SquaredL2Distance"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_distance_measure();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "research_scann.DistanceMeasureConfig.distance_measure");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_distance_measure_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DistanceMeasureConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:research_scann.DistanceMeasureConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string distance_measure = 1 [default = "SquaredL2Distance"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_distance_measure().data(), static_cast<int>(this->_internal_distance_measure().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "research_scann.DistanceMeasureConfig.distance_measure");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_distance_measure(), target);
  }

  // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::distance_measure_params(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:research_scann.DistanceMeasureConfig)
  return target;
}

size_t DistanceMeasureConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:research_scann.DistanceMeasureConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string distance_measure = 1 [default = "SquaredL2Distance"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_distance_measure());
    }

    // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *distance_measure_params_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DistanceMeasureConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DistanceMeasureConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DistanceMeasureConfig::GetClassData() const { return &_class_data_; }

void DistanceMeasureConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DistanceMeasureConfig *>(to)->MergeFrom(
      static_cast<const DistanceMeasureConfig &>(from));
}


void DistanceMeasureConfig::MergeFrom(const DistanceMeasureConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:research_scann.DistanceMeasureConfig)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_distance_measure(from._internal_distance_measure());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_distance_measure_params()->::research_scann::DistanceMeasureParamsConfig::MergeFrom(from._internal_distance_measure_params());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DistanceMeasureConfig::CopyFrom(const DistanceMeasureConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:research_scann.DistanceMeasureConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistanceMeasureConfig::IsInitialized() const {
  return true;
}

void DistanceMeasureConfig::InternalSwap(DistanceMeasureConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      nullptr,
      &distance_measure_, GetArenaForAllocation(),
      &other->distance_measure_, other->GetArenaForAllocation()
  );
  swap(distance_measure_params_, other->distance_measure_params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DistanceMeasureConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_getter, &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_once,
      file_level_metadata_scann_2fproto_2fdistance_5fmeasure_2eproto[0]);
}

// ===================================================================

class DistanceMeasureParamsConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DistanceMeasureParamsConfig>()._has_bits_);
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DistanceMeasureParamsConfig::DistanceMeasureParamsConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:research_scann.DistanceMeasureParamsConfig)
}
DistanceMeasureParamsConfig::DistanceMeasureParamsConfig(const DistanceMeasureParamsConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_filename()) {
    filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filename(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:research_scann.DistanceMeasureParamsConfig)
}

inline void DistanceMeasureParamsConfig::SharedCtor() {
filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DistanceMeasureParamsConfig::~DistanceMeasureParamsConfig() {
  // @@protoc_insertion_point(destructor:research_scann.DistanceMeasureParamsConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DistanceMeasureParamsConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DistanceMeasureParamsConfig::ArenaDtor(void* object) {
  DistanceMeasureParamsConfig* _this = reinterpret_cast< DistanceMeasureParamsConfig* >(object);
  (void)_this;
}
void DistanceMeasureParamsConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DistanceMeasureParamsConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DistanceMeasureParamsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:research_scann.DistanceMeasureParamsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DistanceMeasureParamsConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "research_scann.DistanceMeasureParamsConfig.filename");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DistanceMeasureParamsConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:research_scann.DistanceMeasureParamsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "research_scann.DistanceMeasureParamsConfig.filename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_filename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:research_scann.DistanceMeasureParamsConfig)
  return target;
}

size_t DistanceMeasureParamsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:research_scann.DistanceMeasureParamsConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string filename = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DistanceMeasureParamsConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DistanceMeasureParamsConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DistanceMeasureParamsConfig::GetClassData() const { return &_class_data_; }

void DistanceMeasureParamsConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DistanceMeasureParamsConfig *>(to)->MergeFrom(
      static_cast<const DistanceMeasureParamsConfig &>(from));
}


void DistanceMeasureParamsConfig::MergeFrom(const DistanceMeasureParamsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:research_scann.DistanceMeasureParamsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_filename()) {
    _internal_set_filename(from._internal_filename());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DistanceMeasureParamsConfig::CopyFrom(const DistanceMeasureParamsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:research_scann.DistanceMeasureParamsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistanceMeasureParamsConfig::IsInitialized() const {
  return true;
}

void DistanceMeasureParamsConfig::InternalSwap(DistanceMeasureParamsConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &filename_, GetArenaForAllocation(),
      &other->filename_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DistanceMeasureParamsConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_getter, &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_once,
      file_level_metadata_scann_2fproto_2fdistance_5fmeasure_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace research_scann
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::research_scann::DistanceMeasureConfig* Arena::CreateMaybeMessage< ::research_scann::DistanceMeasureConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::research_scann::DistanceMeasureConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::research_scann::DistanceMeasureParamsConfig* Arena::CreateMaybeMessage< ::research_scann::DistanceMeasureParamsConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::research_scann::DistanceMeasureParamsConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
